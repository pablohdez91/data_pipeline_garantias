-- Parte 1
-- Cruza_Llave
SELECT A.*, B.LLAVE_FINAL 
INTO [Recuperadas_Detalle_202504_cLlave] 
FROM [Recuperadas_Detalle_202504] as A 
LEFT JOIN [Llave_202504] as B 
ON (A.[TPRO_CLAVE]*1)=B.[Programa Mezcla ID] 
AND A.Intermediario_Id=B.Intermediario_Id;

-- Cruza_Llave
SELECT A.*, B.LLAVE_FINAL 
INTO [Pagadas_Detalle_202504_cLlave] 
FROM [Pagadas_Detalle_202504] as A 
LEFT JOIN [Llave_202504] as B 
ON (A.[TPRO_CLAVE]*1)=B.[Programa Mezcla ID] 
AND A.Intermediario_Id=B.Intermediario_Id;

-- Base_Recup_Detalle
SELECT A.*, 
IIF(A.Monto_Mn is null,0,A.Monto_Mn)/1000000 AS [CAPRECUP(MDP)], 
IIF(A.Interes_Mn is null,0,A.Interes_Mn)/1000000 AS [INTRECUP(MDP)], 
IIF(A.Moratorios_Mn is null,0,A.Moratorios_Mn)/1000000 AS [MORAT(MDP)], 
IIF(A.Excedente_Mn is null,0,A.Excedente_Mn)/1000000 AS [EXCEDENTE(MDP)], 
IIF(A.[Gastos_Juicio_Mn] is null,0,A.[Gastos_Juicio_Mn])/1000000 AS [GASTOSJUICIO(MDP)], 
IIF(A.[Sub_Total_Mn] is null,0,A.[Sub_Total_Mn])/1000000 AS [SUBTOTAL (MDP)], 
IIF(A.Monto_Total_Mn is null,0,A.Monto_Total_Mn)/1000000 AS [MONTOTOTAL (MDP)], 
IIF(A.Estatus='E','E','NE') AS REEST, B.Estatus as STATUS_RECUP, 
IIF(A.Fecha > Fecha_Garantia_Honrada,1,0) AS IND_ENTRA, 
IIF(B.Estatus ='Recuperada',
    (IIF(A.Monto_Mn is null,0,A.Monto_Mn)+
        IIF(A.Interes_Mn is null,0,A.Interes_Mn)+
            IIF(A.Moratorios_Mn is null,0,A.Moratorios_Mn)+
                IIF(A.Excedente_Mn is null,0,A.Excedente_Mn)-
                    IIF(A.[Gastos_Juicio_Mn] is null,
    0,
        A.[Gastos_Juicio_Mn]))/1000000,0) AS [MRECUP_TOT(MDP)], 
IIF(B.Estatus ='Rescatada',(IIF(A.Monto_Mn is null,0,A.Monto_Mn)+IIF(A.Interes_Mn is null,0,A.Interes_Mn)+IIF(A.Moratorios_Mn is null,0,A.Moratorios_Mn)+IIF(A.Excedente_Mn is null,0,A.Excedente_Mn)-IIF(A.[Gastos_Juicio_Mn] is null,0,A.[Gastos_Juicio_Mn]))/1000000,0) AS [MRESCAT_TOT(MDP)], 
(YEAR(A.FECHA)-YEAR(A.Fecha_Garantia_Honrada))*12+(MONTH(A.FECHA)-MONTH(A.Fecha_Garantia_Honrada)) AS DIFERENCIAS_MESES, 
(YEAR(A.Fecha_Garantia_Honrada)) AS ANIO_PAGO, 
(YEAR(A.Fecha_Garantia_Honrada))*100+(MONTH(A.Fecha_Garantia_Honrada)) AS ORDEN_PAGO, 
A.Numero_Credito & A.Intermediario_Id AS CONCATENAR_SALDOS 
INTO RECUP_PREVIO_202504 FROM Recuperadas_Detalle_202504_cLlave as A 
left join Estatus as B 
ON (A.Estatus=B.[Estatus ID]); 


-- CiclosRescate
SELECT CONCATENAR_SALDOS, 
Numero_Credito as Prestamo, 
[Razón Social (Intermediario)] as 
INTERMEDIARIO,
MRESCAT_TOTAL, 
IIF(MRESCAT_TOTAL=0,1,0) AS CICLOS_RESCAT 
INTO [CICLOS_RESCATE]  
FROM (SELECT Numero_Credito, 
[Razón Social (Intermediario)], 
CONCATENAR_SALDOS, 
SUM([MRESCAT_TOT(MDP)]*IND_ENTRA) AS MRESCAT_TOTAL  
FROM [RECUP_PREVIO_202504]  
WHERE (Numero_Credito is not null) and ([Razón Social (Intermediario)] is not null)  
GROUP BY Numero_Credito, [Razón Social (Intermediario)], CONCATENAR_SALDOS); 





-- Parte 2
-- Cruza_CiclosRescate
SELECT A.*, B.CICLOS_RESCAT INTO [CURVA_RECUP_202504] FROM [RECUP_PREVIO_202504] as A LEFT JOIN [CICLOS_RESCATE] as B ON A.CONCATENAR_SALDOS = B.CONCATENAR_SALDOS; 

-- AgrupaRecup
SELECT IND_ENTRA, MM_UDIS, Producto AS TAXONOMIA, NR_R, LLAVE_FINAL, TPRO_CLAVE, [Razón Social (Intermediario)] AS BANCO, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, Intermediario_Id, CICLOS_RESCAT, DIFERENCIAS_MESES, Tipo_Garantia_Id AS TIPGAR_CLAVE, ANIO_PAGO AS [ANIO(PAGO)], REEST, YEAR(Fecha_Registro) as Anio_REG_RECUP,  ESQUEMA, ORDEN_PAGO, SUM([MRECUP_TOT(MDP)]) AS MRECUP_TOT, SUM([MRESCAT_TOT(MDP)]) AS MRESCAT_TOT INTO [RECUP_AGRUP_202504_inter] FROM [CURVA_RECUP_202504] GROUP BY IND_ENTRA, MM_UDIS, PRODUCTO, NR_R, LLAVE_FINAL, TPRO_CLAVE, [Razón Social (Intermediario)], CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, Intermediario_Id, CICLOS_RESCAT, DIFERENCIAS_MESES, Tipo_Garantia_Id, ANIO_PAGO, REEST, YEAR(Fecha_Registro),  ESQUEMA, ORDEN_PAGO ;


-- AgrupaRecup
SELECT IND_ENTRA, MM_UDIS, Producto AS TAXONOMIA, NR_R, LLAVE_FINAL, TPRO_CLAVE, [Razón Social (Intermediario)] AS BANCO, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, Intermediario_Id, CICLOS_RESCAT, DIFERENCIAS_MESES, Tipo_Garantia_Id AS TIPGAR_CLAVE, ANIO_PAGO AS [ANIO(PAGO)], REEST, YEAR(Fecha_Registro) as Anio_REG_RECUP, Month(Fecha_Registro) as Mes_REG_RECUP,  ESQUEMA, ORDEN_PAGO, SUM([MRECUP_TOT(MDP)]) AS MRECUP_TOT, SUM([MRESCAT_TOT(MDP)]) AS MRESCAT_TOT INTO [RECUP_AGRUP_202504_inter_Mes] FROM [CURVA_RECUP_202504] GROUP BY IND_ENTRA, MM_UDIS, PRODUCTO, NR_R, LLAVE_FINAL, TPRO_CLAVE, [Razón Social (Intermediario)], CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, Intermediario_Id, CICLOS_RESCAT, DIFERENCIAS_MESES, Tipo_Garantia_Id, ANIO_PAGO, REEST, YEAR(Fecha_Registro), Month(Fecha_Registro),  ESQUEMA, ORDEN_PAGO ;


-- Agrupa_Recup_VF_Completo
SELECT *, TAXONOMIA, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, IIF(ESQUEMA='PP','Pari Passu',IIF(ESQUEMA is null,'Pari Passu','1P')) AS ESQUEMA_VF, IIF([ANIO(PAGO)]<=2006,2006, [ANIO(PAGO)]) AS [ANIO(PAGO)_New], LLAVE_FINAL, TPRO_CLAVE INTO [RECUP_AGRUP_202504_Completa_Mes] FROM [RECUP_AGRUP_202504_inter_Mes]; 


-- Agrupa_Recup_VF_Completo
SELECT *, TAXONOMIA, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, IIF(ESQUEMA='PP','Pari Passu',IIF(ESQUEMA is null,'Pari Passu','1P')) AS ESQUEMA_VF, IIF([ANIO(PAGO)]<=2006,2006, [ANIO(PAGO)]) AS [ANIO(PAGO)_New], LLAVE_FINAL, TPRO_CLAVE INTO [RECUP_AGRUP_202504_Completa] FROM [RECUP_AGRUP_202504_inter]; 

--------
-- Agrupa_Recup_VF_Extracto
SELECT IND_ENTRA, MM_UDIS, TAXONOMIA, NR_R, BANCO, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, CICLOS_RESCAT, DIFERENCIAS_MESES, TIPGAR_CLAVE, [ANIO(PAGO)], REEST, MRECUP_TOT, MRESCAT_TOT, Anio_REG_RECUP, ESQUEMA_VF AS ESQUEMA, [ANIO(PAGO)_New], Intermediario_Id, TPRO_CLAVE, ORDEN_PAGO INTO [RECUP_AGRUP_202504] FROM [RECUP_AGRUP_202504_Completa]; 


-- Agrupa_UltimoPago
SELECT Intermediario_Id, Numero_Credito, MAX([Pago ID]) AS ULT_PAGO  INTO [TABLA_ULT_PAGO] FROM [Pagadas_Detalle_202504_cLlave] GROUP BY Intermediario_Id, Numero_Credito; 


-- Toma_UltimoPago
SELECT A.*, B.ULT_PAGO INTO [RECUP_PREVIO_202504_cUP] FROM [Pagadas_Detalle_202504_cLlave] as A LEFT JOIN [TABLA_ULT_PAGO] as B ON A.Intermediario_Id=B.Intermediario_Id AND A.Numero_Credito=B.Numero_Credito AND A.[Pago ID]=B.ULT_PAGO WHERE B.ULT_PAGO IS NOT NULL;


-- Base_Pagadas_Detalle
SELECT A.*, IIF(A.Monto_Pagado_Mn is null,0,A.Monto_Pagado_Mn)/1000000 AS [MPAGADO (MDP)], (YEAR(A.Fecha_Garantia_Honrada)) AS ANIO_PAGO, (YEAR(A.Fecha_Garantia_Honrada))*100+MONTH(A.Fecha_Garantia_Honrada) AS ORDEN_PAGO , A.[Numero_Credito] & A.Intermediario_Id AS CONCATENAR_SALDOS INTO [PAGADAS_PREVIO_202504] FROM [RECUP_PREVIO_202504_cUP] as A ;






-- Parte 3
-- Cruza_CiclosRescate*
SELECT A.*, B.CICLOS_RESCAT INTO [PAGADAS_DETALLE_VF_202504] FROM [PAGADAS_PREVIO_202504] as A LEFT JOIN [CICLOS_RESCATE] as B ON A.CONCATENAR_SALDOS = B.CONCATENAR_SALDOS; 

-- Agrupa_Pagos
SELECT MM_UDIS, PRODUCTO AS TAXONOMIA, NR_R, LLAVE_FINAL, TPRO_CLAVE, [Razón Social (Intermediario)] AS BANCO, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, Intermediario_Id, CICLOS_RESCAT, Tipo_Garantia_Id AS TIPGAR_CLAVE, ANIO_PAGO AS [ANIO(PAGO)], ESQUEMA, ORDEN_PAGO, SUM([MPAGADO (MDP)]) AS MPAGADO INTO [PAGADAS_AGRUP_202504_inter] FROM [PAGADAS_DETALLE_VF_202504] GROUP BY MM_UDIS, PRODUCTO, NR_R, LLAVE_FINAL, TPRO_CLAVE, [Razón Social (Intermediario)], CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, Intermediario_Id, CICLOS_RESCAT, Tipo_Garantia_Id, ANIO_PAGO, ESQUEMA, ORDEN_PAGO;

-- Agrupa_Pagados_VF_Completo
SELECT *, TAXONOMIA, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, IIF(CICLOS_RESCAT is null,1,IIF(CICLOS_RESCAT=0,0,1)) AS  CICLOS_RESCAT_VF, [ANIO(PAGO)], LLAVE_FINAL, TPRO_CLAVE,  IIF(ESQUEMA='PP','Pari Passu',IIF(ESQUEMA is null,'Pari Passu','1P')) AS ESQUEMA_VF, IIF([ANIO(PAGO)]<=2006,2006, [ANIO(PAGO)]) AS [ANIO(PAGO)_New] INTO [PAGADAS_AGRUP_202504_Completa] FROM [PAGADAS_AGRUP_202504_inter]; 

-- Agrupa_Pagados_VF_Extracto
SELECT MM_UDIS, TAXONOMIA, NR_R, BANCO, CSG, CSF, AGRUPAMIENTO, AGRUPAMIENTO_ID, CICLOS_RESCAT_VF AS CICLOS_RESCAT, TIPGAR_CLAVE, [ANIO(PAGO)], MPAGADO, ESQUEMA_VF AS ESQUEMA, [ANIO(PAGO)_New], Intermediario_Id, TPRO_CLAVE, ORDEN_PAGO INTO [PAGADAS_AGRUP_202504] FROM [PAGADAS_AGRUP_202504_Completa]; 





-- Parte 4
-- Une_Pagos_SevObs_Recup*
SELECT A.*, B.Monto_Pagado_Mn/1000000 as [MPAGADO (MDP)] INTO [CURVA_RECUP_202504_VF] FROM [CURVA_RECUP_202504] as A LEFT JOIN [PAGADAS_DETALLE_VF_202504] as B ON A.CONCATENAR_SALDOS = B.CONCATENAR_SALDOS; 

-- Tabla_SevObs_Recup*
SELECT A.MM_UDIS, A.TAXONOMIA, A.NR_R, A.BANCO, A.CSG, AGRUPAMIENTO, AGRUPAMIENTO_ID, A.TIPGAR_CLAVE, A.ESQUEMA, A.TPRO_CLAVE, A.[ANIO(PAGO)_New], 'Recup' as CONCEPTO, IIF(A.Anio_REG_RECUP<=2018,'Inicio','Acum') AS PERIODO, A.MRECUP_TOT AS MONTO INTO [TABLA_SEV_OBS_202504] FROM [RECUP_AGRUP_202504] as A WHERE A.CICLOS_RESCAT=1 AND A.[ANIO(PAGO)]<=2018 AND A.IND_ENTRA=1; 

-------------------------
-- Tabla_SevObs_Pagos
SELECT B.MM_UDIS, B.TAXONOMIA, B.NR_R, B.BANCO, B.CSG, B.AGRUPAMIENTO, B.AGRUPAMIENTO_ID, B.TIPGAR_CLAVE, B.ESQUEMA, B.TPRO_CLAVE, B.[ANIO(PAGO)_New], 'Pago' as CONCEPTO, 'Inicio' AS PERIODO, B.MPAGADO AS MONTO INTO [TABLA_SEV_OBS_202504_Temp] FROM [PAGADAS_AGRUP_202504] as B WHERE B.CICLOS_RESCAT=1 AND B.[ANIO(PAGO)]<=2018; 

-- Inserta_Filas_IN*
insert into [TABLA_SEV_OBS_202504] select * from [TABLA_SEV_OBS_202504_Temp];

-- BorrarTabla
DROP TABLE TABLA_SEV_OBS_202504_Temp;

-- 
SELECT * INTO PAGADAS_AGRUP_202504_VF FROM PAGADAS_AGRUP_202504 WHERE TAXONOMIA NOT IN ('GARANTIAS BANCOMEXT','GARANTIAS SHF/LI FINANCIERO','GARANTIAS BANSEFI'); 

-- 
SELECT * INTO RECUP_AGRUP_202504_VF FROM RECUP_AGRUP_202504 WHERE TAXONOMIA NOT IN ('GARANTIAS BANCOMEXT','GARANTIAS SHF/LI FINANCIERO','GARANTIAS BANSEFI'); 

-- 
SELECT TAXONOMIA, SUM(MPAGADO) AS S_MPagado INTO Valida_Pagos FROM PAGADAS_AGRUP_202504_VF GROUP BY TAXONOMIA; 

-- 
SELECT TAXONOMIA, SUM(MRECUP_TOT) AS S_MRcup, SUM(MRESCAT_TOT) AS S_MRescat INTO Valida_Recup_Rescat FROM RECUP_AGRUP_202504_VF WHERE IND_ENTRA = 1 GROUP BY TAXONOMIA; 

-- 
SELECT TAXONOMIA, SUM(MPAGADO) AS S_MPagado INTO Valida_Pagos_FIDE FROM PAGADAS_AGRUP_202504_VF WHERE AGRUPAMIENTO = 'FIDE' GROUP BY TAXONOMIA; 

--
SELECT TAXONOMIA, SUM(MRECUP_TOT) AS S_MRcup, SUM(MRESCAT_TOT) AS S_MRescat INTO Valida_Recup_Rescat_FIDE FROM RECUP_AGRUP_202504_VF WHERE AGRUPAMIENTO = 'FIDE' AND IND_ENTRA=1  GROUP BY TAXONOMIA; 

